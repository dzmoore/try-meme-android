// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.eastapps.mgs.web;

import com.eastapps.mgs.model.Meme;
import com.eastapps.mgs.model.MemeBackground;
import com.eastapps.mgs.model.MemeText;
import com.eastapps.mgs.model.MemeUser;
import com.eastapps.mgs.model.SampleMeme;
import com.eastapps.mgs.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Meme, String> ApplicationConversionServiceFactoryBean.getMemeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.eastapps.mgs.model.Meme, java.lang.String>() {
            public String convert(Meme meme) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, Meme> ApplicationConversionServiceFactoryBean.getIdToMemeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.eastapps.mgs.model.Meme>() {
            public com.eastapps.mgs.model.Meme convert(java.lang.Long id) {
                return Meme.findMeme(id);
            }
        };
    }
    
    public Converter<String, Meme> ApplicationConversionServiceFactoryBean.getStringToMemeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.eastapps.mgs.model.Meme>() {
            public com.eastapps.mgs.model.Meme convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Meme.class);
            }
        };
    }
    
    public Converter<MemeBackground, String> ApplicationConversionServiceFactoryBean.getMemeBackgroundToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.eastapps.mgs.model.MemeBackground, java.lang.String>() {
            public String convert(MemeBackground memeBackground) {
                return new StringBuilder().append(memeBackground.getFilePath()).append(' ').append(memeBackground.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, MemeBackground> ApplicationConversionServiceFactoryBean.getIdToMemeBackgroundConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.eastapps.mgs.model.MemeBackground>() {
            public com.eastapps.mgs.model.MemeBackground convert(java.lang.Long id) {
                return MemeBackground.findMemeBackground(id);
            }
        };
    }
    
    public Converter<String, MemeBackground> ApplicationConversionServiceFactoryBean.getStringToMemeBackgroundConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.eastapps.mgs.model.MemeBackground>() {
            public com.eastapps.mgs.model.MemeBackground convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), MemeBackground.class);
            }
        };
    }
    
    public Converter<MemeText, String> ApplicationConversionServiceFactoryBean.getMemeTextToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.eastapps.mgs.model.MemeText, java.lang.String>() {
            public String convert(MemeText memeText) {
                return new StringBuilder().append(memeText.getText()).append(' ').append(memeText.getFontSize()).toString();
            }
        };
    }
    
    public Converter<Long, MemeText> ApplicationConversionServiceFactoryBean.getIdToMemeTextConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.eastapps.mgs.model.MemeText>() {
            public com.eastapps.mgs.model.MemeText convert(java.lang.Long id) {
                return MemeText.findMemeText(id);
            }
        };
    }
    
    public Converter<String, MemeText> ApplicationConversionServiceFactoryBean.getStringToMemeTextConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.eastapps.mgs.model.MemeText>() {
            public com.eastapps.mgs.model.MemeText convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), MemeText.class);
            }
        };
    }
    
    public Converter<MemeUser, String> ApplicationConversionServiceFactoryBean.getMemeUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.eastapps.mgs.model.MemeUser, java.lang.String>() {
            public String convert(MemeUser memeUser) {
                return new StringBuilder().append(memeUser.getUsername()).append(' ').append(memeUser.getPassword()).append(' ').append(memeUser.getSalt()).toString();
            }
        };
    }
    
    public Converter<Long, MemeUser> ApplicationConversionServiceFactoryBean.getIdToMemeUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.eastapps.mgs.model.MemeUser>() {
            public com.eastapps.mgs.model.MemeUser convert(java.lang.Long id) {
                return MemeUser.findMemeUser(id);
            }
        };
    }
    
    public Converter<String, MemeUser> ApplicationConversionServiceFactoryBean.getStringToMemeUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.eastapps.mgs.model.MemeUser>() {
            public com.eastapps.mgs.model.MemeUser convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), MemeUser.class);
            }
        };
    }
    
    public Converter<SampleMeme, String> ApplicationConversionServiceFactoryBean.getSampleMemeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.eastapps.mgs.model.SampleMeme, java.lang.String>() {
            public String convert(SampleMeme sampleMeme) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, SampleMeme> ApplicationConversionServiceFactoryBean.getIdToSampleMemeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.eastapps.mgs.model.SampleMeme>() {
            public com.eastapps.mgs.model.SampleMeme convert(java.lang.Long id) {
                return SampleMeme.findSampleMeme(id);
            }
        };
    }
    
    public Converter<String, SampleMeme> ApplicationConversionServiceFactoryBean.getStringToSampleMemeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.eastapps.mgs.model.SampleMeme>() {
            public com.eastapps.mgs.model.SampleMeme convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), SampleMeme.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getMemeToStringConverter());
        registry.addConverter(getIdToMemeConverter());
        registry.addConverter(getStringToMemeConverter());
        registry.addConverter(getMemeBackgroundToStringConverter());
        registry.addConverter(getIdToMemeBackgroundConverter());
        registry.addConverter(getStringToMemeBackgroundConverter());
        registry.addConverter(getMemeTextToStringConverter());
        registry.addConverter(getIdToMemeTextConverter());
        registry.addConverter(getStringToMemeTextConverter());
        registry.addConverter(getMemeUserToStringConverter());
        registry.addConverter(getIdToMemeUserConverter());
        registry.addConverter(getStringToMemeUserConverter());
        registry.addConverter(getSampleMemeToStringConverter());
        registry.addConverter(getIdToSampleMemeConverter());
        registry.addConverter(getStringToSampleMemeConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
