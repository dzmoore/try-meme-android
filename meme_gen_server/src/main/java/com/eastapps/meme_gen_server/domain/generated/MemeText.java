package com.eastapps.meme_gen_server.domain.generated;

// Generated Dec 29, 2012 10:59:32 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * MemeText generated by hbm2java
 */
@Entity
@Table(name = "meme_text", catalog = "mgsdb")
public class MemeText implements java.io.Serializable {

	private Integer id;
	private Meme meme;
	private String text;
	private String textType;
	private Integer fontSize;
	private Date lastMod;

	public MemeText() {
	}

	public MemeText(Date lastMod) {
		this.lastMod = lastMod;
	}

	public MemeText(Meme meme, String text, String textType, Integer fontSize, Date lastMod) {
		this.meme = meme;
		this.text = text;
		this.textType = textType;
		this.fontSize = fontSize;
		this.lastMod = lastMod;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "meme_fk")
	public Meme getMeme() {
		return this.meme;
	}

	public void setMeme(Meme meme) {
		this.meme = meme;
	}

	@Column(name = "text", length = 200)
	public String getText() {
		return this.text;
	}

	public void setText(String text) {
		this.text = text;
	}

	@Column(name = "text_type", length = 20)
	public String getTextType() {
		return this.textType;
	}

	public void setTextType(String textType) {
		this.textType = textType;
	}

	@Column(name = "font_size")
	public Integer getFontSize() {
		return this.fontSize;
	}

	public void setFontSize(Integer fontSize) {
		this.fontSize = fontSize;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_mod", nullable = false, length = 19)
	public Date getLastMod() {
		return this.lastMod;
	}

	public void setLastMod(Date lastMod) {
		this.lastMod = lastMod;
	}

}
