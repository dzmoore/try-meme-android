package com.eastapps.meme_gen_server.domain;

// Generated Nov 10, 2012 3:21:20 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.apache.commons.lang.StringUtils;

import com.eastapps.meme_gen_server.annotation.ParentField;
import com.eastapps.meme_gen_server.annotation.PrimitiveField;
import com.eastapps.meme_gen_server.constants.Constants;

/**
 * MemeText generated by hbm2java
 */
@Entity
@Table(name = "meme_text")
public class MemeText implements java.io.Serializable {
	private static final long serialVersionUID = -2665509303313696077L;
	
	private Integer id;
	
	private Meme meme;
	
	private String text;
	
	private String textType;
	
	private Integer fontSize;

	public MemeText() {
		super();
		id = Constants.INVALID;
		meme = new Meme();
		text = StringUtils.EMPTY;
		textType = StringUtils.EMPTY;
		fontSize = Constants.INVALID;
	}

	public MemeText(Meme meme, String text, String textType, Integer fontSize) {
		this.meme = meme;
		this.text = text;
		this.textType = textType;
		this.fontSize = fontSize;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "meme_fk")
	public Meme getMeme() {
		return this.meme;
	}

	public void setMeme(Meme meme) {
		this.meme = meme;
	}

	@Column(name = "text", length = 200)
	public String getText() {
		return this.text;
	}

	public void setText(String text) {
		this.text = text;
	}

	@Column(name = "text_type", length = 20)
	public String getTextType() {
		return this.textType;
	}

	public void setTextType(String textType) {
		this.textType = textType;
	}
	
	@Column(name = "font_size")
	public Integer getFontSize() {
		return this.fontSize;
	}

	public void setFontSize(Integer fontSize) {
		this.fontSize = fontSize;
	}
	
	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("MemeText [id=");
		builder.append(id);
		builder.append(", text=");
		builder.append(text);
		builder.append(", textType=");
		builder.append(textType);
		builder.append("]");
		return builder.toString();
	}


}
