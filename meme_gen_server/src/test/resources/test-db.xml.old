<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd         
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd         
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd         
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd         
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    <!-- Scans within the base package of the application for @Components 
        to configure as beans -->
    <!-- <bean id="placeholderConfig"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <bean class="org.springframework.core.io.FileSystemResource">
                <constructor-arg type="java.lang.String">
                    <value>src/test/resources/db.properties</value>
                </constructor-arg>
            </bean>
        </property>
    </bean> -->
  <!--   <context:property-placeholder location="db.properties" />  -->
    
    <bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="jpaVendorAdapter">
            <bean
                class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
                <property name="generateDdl" value="true" />
                <property name="databasePlatform" value="${db.dialect}" />
            </bean>
        </property>
    </bean>
    <bean class="java.net.URI" id="dbUrl">
        <constructor-arg value="${DATABASE_URL}" />
    </bean>
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName" value="${db.driver}" />
        <property name="url"
            value="#{ 'jdbc:mysql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }" />
        <property name="username"
            value="#{ @dbUrl.getUserInfo().split(':')[0] }" />
        <property name="password"
            value="#{ @dbUrl.getUserInfo().split(':')[1] }" />
    </bean>
    <bean id="mySessionFactory"
        class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation">
            <value>classpath:hibernatetest.cfg.xml</value>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>com.eastapps.meme_gen_server.domain.User</value>
                <value>com.eastapps.meme_gen_server.domain.LvMemeType</value>
                <value>com.eastapps.meme_gen_server.domain.Meme</value>
                <value>com.eastapps.meme_gen_server.domain.MemeBackground</value>
                <value>com.eastapps.meme_gen_server.domain.MemeText</value>
                <value>com.eastapps.meme_gen_server.domain.DeviceInfo</value>
                <value>com.eastapps.meme_gen_server.domain.UserFavMemeType</value>
            </list>
        </property>
    </bean>
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    </bean>
    <tx:annotation-driven />
    <bean
        class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
</beans>